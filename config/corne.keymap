/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        delete_word {
            bindings = <&kp LC(BACKSPACE)>;
            key-positions = <27 28>;
        };

        capslock {
            bindings = <&kp CAPSLOCK>;
            key-positions = <17 18>;
        };

        desk {
            bindings = <&kp C_AC_DESKTOP_SHOW_ALL_WINDOWS>;
            key-positions = <17 29>;
        };

        mute {
            bindings = <&kp K_MUTE>;
            key-positions = <5 17>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESCAPE           &kp Q  &kp W  &kp E          &kp R           &kp T        &kp Y   &kp U      &kp I          &kp O    &kp P          &kp BACKSLASH
&tog 2               &kp A  &kp S  &kp D          &kp F           &kp G        &kp H   &kp J      &kp K          &kp L    &kp SEMICOLON  &kp BACKSPACE
&mt LEFT_GUI ESCAPE  &kp Z  &kp X  &kp C          &kp V           &kp B        &kp N   &kp M      &kp COMMA      &kp DOT  &kp FSLH       &kp LEFT_GUI
                                   &mt LCTRL TAB  &kp LEFT_SHIFT  &kp ENTER    &tog 1  &kp SPACE  &kp RIGHT_ALT
            >;
        };

        layer_1 {
            bindings = <
&trans  &none          &kp NUMBER_2  &kp UP        &none        &kp LESS_THAN       &none       &kp N7        &kp N8        &kp N9        &none         &trans
&trans  &none          &kp LEFT      &kp DOWN      &kp RIGHT    &kp GREATER_THAN    &kp PERIOD  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp NUMBER_0  &trans
&trans  &kp KP_DIVIDE  &kp ASTERISK  &kp KP_MINUS  &kp KP_PLUS  &kp EQUAL           &kp COMMA   &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &none         &trans
                                     &trans        &trans       &trans              &trans      &trans        &trans
            >;
        };

        layer_2 {
            bindings = <
&trans  &kp F1  &kp F2   &kp F3   &kp F4   &kp C_VOLUME_UP    &kp HOME  &kp PAGE_DOWN  &kp PAGE_UP  &kp END    &none  &trans
&trans  &kp F5  &kp F6   &kp F7   &kp F8   &kp C_VOL_DN       &kp LEFT  &kp DOWN       &kp UP       &kp RIGHT  &none  &trans
&trans  &kp F9  &kp F10  &kp F11  &kp F12  &none              &none     &none          &none        &none      &none  &trans
                         &trans   &trans   &trans             &trans    &trans         &trans
            >;
        };

        layer_3 {
            bindings = <
&soft_off   &none         &none         &none         &none         &none           &kp C_VOLUME_UP    &none  &none  &none  &none  &soft_off
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp C_VOLUME_DOWN  &none  &none  &none  &none  &none
&none       &none         &none         &none         &none         &none           &kp K_MUTE         &none  &none  &none  &none  &none
                                        &none         &none         &none           &none              &none  &none
            >;
        };
    };
};
